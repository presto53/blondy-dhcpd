# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require 'simplecov'
SimpleCov.start

require 'net-dhcp'
require 'eventmachine'
require 'ostruct'
require 'ipaddr'
require 'rspec'

spec_root = File.dirname(File.absolute_path(__FILE__))
Dir.glob(spec_root + '/../lib/blondy/dhcpd/*') {|file| require file}


RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

# Wrap for running examples inside eventmachine reactor
RSpec::Core::Example.class_eval do
  alias ignorant_run run

  def run(example_group_instance, reporter)
    Fiber.new do
      EM.run do
	df = EM::DefaultDeferrable.new
	result = nil
	df.callback { |x| EM.stop_event_loop; Fiber.yield result }
	result = ignorant_run example_group_instance, reporter
	df.succeed
      end
    end.resume
  end
end

